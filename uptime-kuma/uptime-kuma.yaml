apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      # Mount the PVC
      volumes:
        - name: data-mount
          persistentVolumeClaim:
            claimName: uptime-data-claim
      containers:
        - name: uptime-kuma
          image: louislam/uptime-kuma:latest
          # expose the container's port
          ports:
            - containerPort: 3001
          # Pass the mount into the container
          volumeMounts:
            - mountPath: '/app/data'
              name: data-mount
          # optional but recommended to set usage limits
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
          imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: akademia-status-service
spec:
  ports:
    - port: 3001
      targetPort: 3001
      protocol: TCP
  selector:
    app: uptime-kuma
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: uptime-data
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: uptime-data
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptime-data-claim
spec:
  storageClassName: uptime-data
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  labels:
    app: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
  name: uptime-kuma-ingress
  namespace: default
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: uptime-kuma
      port:
        number: 80
  rules:
    - host: status.akademia.cc
      http:
        paths:
          - backend:
              service:
                name: uptime-kuma
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
  - hosts:
    - status.akademia.cc
    secretName: status-akademia-cc-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: status-akademia-cc-tls
  namespace: default
spec:
  secretName: status-akademia-cc-tls
  issuerRef:
    name: letsencrypt-prod
  commonName: status.akademia.cc
  dnsNames:
    - status.akademia.cc
