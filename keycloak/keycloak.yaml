apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: akademia-kc
spec:
  instances: 1
  image: quay.io/phasetwo/phasetwo-keycloak:23
  startOptimized: false
  db:
    vendor: postgres
    host: akademia-db-postgres-do-user-16040512-0.c.db.ondigitalocean.com
    usernameSecret:
      name: keycloak-db
      key: KC_DB_USERNAME
    passwordSecret:
      name: keycloak-db
      key: KC_DB_PASSWORD
    database: keycloak
    port: 25060
  http:
    httpEnabled: true
  hostname:
    adminUrl: https://auth.akademia.cc/
    hostname: auth.akademia.cc
  ingress:
    enabled: false
  proxy:
    headers: forwarded
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    route.openshift.io/termination: reencrypt
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
  labels:
    app: keycloak
    app.kubernetes.io/instance: akademia-kc
    app.kubernetes.io/managed-by: keycloak-operator
  name: akademia-kc-ingress-test
  namespace: default
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: akademia-kc-service
      port:
        number: 8080
  tls:
  - hosts:
    - auth.akademia.cc
    secretName: auth-akademia-cc-tls
  rules:
    - host: auth.akademia.cc
      http:
        paths:
          - backend:
              service:
                name: akademia-kc-service
                port:
                  number: 8080
            path: /
            pathType: Prefix