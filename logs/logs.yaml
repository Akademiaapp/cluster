apiVersion: v1
kind: Service
metadata:
  name: openobserve
spec:
  type: ClusterIP
  selector:
    app: openobserve
  ports:
  - name: http
    port: 5080
    targetPort: 5080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openobserve
  labels:
    name: openobserve
spec:
  serviceName: openobserve
  replicas: 1
  selector:
    matchLabels:
      name: openobserve
      app: openobserve
  template:
    metadata:
      labels:
        name: openobserve
        app: openobserve
    spec:
      securityContext:
        fsGroup: 2000
        runAsUser: 10000
        runAsGroup: 3000
        runAsNonRoot: true
      # terminationGracePeriodSeconds: 0
      containers:
        - name: openobserve
          image: public.ecr.aws/zinclabs/openobserve:latest
          env:
            - name: ZO_ROOT_USER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: openobserve
                  key: ZO_ROOT_USER_EMAIL
            - name: ZO_ROOT_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openobserve
                  key: ZO_ROOT_USER_PASSWORD
            - name: ZO_DATA_DIR
              value: /data
          # command: ["/bin/bash", "-c", "while true; do sleep 1; done"]
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 4096m
              memory: 2048Mi
            requests:
              cpu: 256m
              memory: 50Mi
          ports:
            - containerPort: 5080
              name: http
          volumeMounts:
          - name: data
            mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      # storageClassName: default
      # NOTE: You can increase the storage size
      resources:
        requests:
          storage: 2Gi
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: logs-akademia-cc-tls
  namespace: default
spec:
  secretName: logs-akademia-cc-tls
  issuerRef:
    name: letsencrypt-prod
  dnsNames:
    - logs.akademia.cc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  labels:
    app: logs
    app.kubernetes.io/instance: akademia-logs
  name: akademia-logs-ingress
  namespace: default
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: openobserve
      port:
        number: 5080
  tls:
  - hosts:
    - logs.akademia.cc
    secretName: logs-akademia-cc-tls
  rules:
    - host: logs.akademia.cc
      http:
        paths:
          - backend:
              service:
                name: openobserve
                port:
                  number: 5080
            path: /
            pathType: Prefix